# Подключение всех необходимых библиотек
import speech_recognition as sr
# import os uncomment for Linux
import sys
import webbrowser
import pyttsx3


# Функция, позволяющая проговаривать слова
# принимает параметр "Слова" и проговаривает их
def talk(words):
    engine = pyttsx3.init()
    print(words)  # Дополнительно выводим на экран
    engine.say(words)  # Проговариваем слова
    engine.runAndWait()
    # os.system("say " + words) uncomment for Linux


""" 
    Функция command() служит для отслеживания микрофона.
    Вызывая функцию мы будет слушать что скажет пользователь,
    при этом для прослушивания будет использован микрофон.
    Получение данные будут сконвертированы в строку и далее
    будет происходить их проверка.
"""


def command():
    # Создаем объект на основе библиотеки
    # speech_recognition и вызываем метод для определения данных
    r = sr.Recognizer()

    # Начинаем прослушивать микрофон и записываем данные в source
    with sr.Microphone() as source:
        # Просто вывод, чтобы мы знали когда говорить
        print("Говорите")
        # Устанавливаем паузу, чтобы прослушивание
        # началось лишь по прошествию 1 секунды
        r.pause_threshold = 1
        # используем adjust_for_ambient_noise для удаления
        # посторонних шумов из аудио дорожки
        r.adjust_for_ambient_noise(source, duration=1)
        # Полученные данные записываем в переменную audio
        # пока мы получили лишь mp3 звук
        audio = r.listen(source)

    try:  # Обрабатываем все при помощи исключений
        """ 
        Распознаем данные из mp3 дорожки.
        Указываем что отслеживаемый язык русский.
        Благодаря lower() приводим все в нижний регистр.
        Теперь мы получили данные в формате строки,
        которые спокойно можем проверить в условиях
        """
        assistant_task = r.recognize_google(audio, language="ru-RU").lower()
        # Просто отображаем текст, что сказал пользователь
        print("Вы сказали: " + assistant_task)
    # Если не смогли распознать текст, то будет вызвана эта ошибка
    except sr.UnknownValueError:
        # Здесь просто проговариваем слова "Я вас не поняла"
        # и вызываем снова функцию command() для
        # получения текста от пользователя
        talk("Я вас не поняла")
        assistant_task = command()

    # В конце функции возвращаем текст задания
    # или же повторный вызов функции
    return assistant_task


# Данная функция служит для проверки текста,
# что сказал пользователь (assistant_task - текст от пользователя)
def make_something(assistant_task):
    # Попросту проверяем текст на соответствие
    # Если в тексте, что сказал пользователь есть слова
    # "открыть сайт", то выполняем команду
    if 'открыть сайт' in assistant_task:
        # Проговариваем текст
        talk("Уже открываю")
        # Указываем сайт для открытия
        url = 'https://itproger.com'
        # Открываем сайт
        webbrowser.open(url)
    # если было сказано "стоп", то останавливаем прогу
    elif 'спи' in assistant_task:
        # Проговариваем текст
        talk("Да, конечно, без проблем")
        # Выходим из программы
        sys.exit()
    # Аналогично
    elif 'имя' in assistant_task:
        talk("Меня зовут Себастьян")


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    talk("Привет, чем я могу помочь вам?")
    # Вызов функции для проверки текста будет
    # осуществляться постоянно, поэтому здесь
    # прописан бесконечный цикл while
    while True:
        make_something(command())
